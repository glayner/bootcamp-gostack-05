{"ast":null,"code":"import _slicedToArray from \"/home/thiago/worckspace/GoStack/modulo05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\nimport { Loading, Owner, IssueList, IssuesFilter } from './styles';\n\nclass Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      issueState: 'all'\n    };\n\n    this.handleAll = e => {\n      e.preventDefault();\n      this.setState({\n        issueState: 'all'\n      });\n    };\n\n    this.handleOpen = e => {\n      e.preventDefault();\n      this.setState({\n        issueState: 'open'\n      });\n    };\n\n    this.handleClosed = e => {\n      e.preventDefault();\n      this.setState({\n        issueState: 'closed'\n      });\n    };\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const match = this.props.match;\n    const issueState = this.state.issueState;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    if (prevState !== issueState) {\n      const _ref = await Promise.all([api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n        params: {\n          state: issueState,\n          per_page: 30\n        }\n      })]),\n            _ref2 = _slicedToArray(_ref, 1),\n            issues = _ref2[0];\n    }\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const issueState = this.state.issueState;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const _ref3 = await Promise.all([api.get(\"/repos/\".concat(repoName)), api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n      params: {\n        state: issueState,\n        per_page: 30\n      }\n    })]),\n          _ref4 = _slicedToArray(_ref3, 2),\n          repository = _ref4[0],\n          issues = _ref4[1];\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          repository = _this$state.repository,\n          issues = _this$state.issues,\n          loading = _this$state.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Carregando\", React.createElement(FaSpinner, {\n        color: \"#FFF\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, repository.description)), React.createElement(IssuesFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClosed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Closed\")), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, issue.user.login))))));\n  }\n\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n      state: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Repository;","map":{"version":3,"sources":["/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","FaSpinner","api","Container","Loading","Owner","IssueList","IssuesFilter","Repository","state","repository","issues","loading","issueState","handleAll","e","preventDefault","setState","handleOpen","handleClosed","componentDidUpdate","_","prevState","match","props","repoName","decodeURIComponent","params","Promise","all","get","per_page","componentDidMount","data","render","owner","avatar_url","login","name","description","map","issue","String","id","user","html_url","title","labels","label","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\n\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\n\nimport { Loading, Owner, IssueList, IssuesFilter } from './styles';\n\nclass Repository extends Component {\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    issueState: 'all',\n  };\n\n  async componentDidUpdate(_, prevState) {\n    const { match } = this.props;\n    const { issueState } = this.state;\n    const repoName = decodeURIComponent(match.params.repository);\n    if (prevState !== issueState) {\n      const [issues] = await Promise.all([\n        api.get(`/repos/${repoName}/issues`, {\n          params: {\n            state: issueState,\n            per_page: 30,\n          },\n        }),\n      ]);\n    }\n  }\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const { issueState } = this.state;\n\n    const repoName = decodeURIComponent(match.params.repository);\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: issueState,\n          per_page: 30,\n        },\n      }),\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n  }\n\n  handleAll = e => {\n    e.preventDefault();\n    this.setState({ issueState: 'all' });\n  };\n\n  handleOpen = e => {\n    e.preventDefault();\n    this.setState({ issueState: 'open' });\n  };\n\n  handleClosed = e => {\n    e.preventDefault();\n    this.setState({ issueState: 'closed' });\n  };\n\n  render() {\n    const { repository, issues, loading } = this.state;\n\n    if (loading) {\n      return (\n        <Loading>\n          Carregando\n          <FaSpinner color=\"#FFF\" size={30} />\n        </Loading>\n      );\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n        <IssuesFilter>\n          <button type=\"submit\" onClick={this.handleAll}>\n            All\n          </button>\n          <button type=\"submit\" onClick={this.handleOpen}>\n            Open\n          </button>\n          <button type=\"submit\" onClick={this.handleClosed}>\n            Closed\n          </button>\n        </IssuesFilter>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n      </Container>\n    );\n  }\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n      state: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}