{"ast":null,"code":"var _jsxFileName = \"/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\nimport { Loading, Owner, IssueList, IssuesFilter, IssuePagination } from './styles';\n\nclass Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      issueState: ''\n    };\n\n    this.formSumbit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            issueState = _this$state.issueState,\n            repository = _this$state.repository;\n      const repoName = \"\".concat(repository.owner.login, \"/\").concat(repository.name);\n      const issues = await api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n        params: {\n          state: issueState,\n          per_page: 5\n        }\n      });\n      this.setState({\n        issues: issues.data,\n        loading: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const repoName = decodeURIComponent(match.params.repository);\n    const repository = await api.get(\"/repos/\".concat(repoName));\n    this.setState({\n      repository: repository.data,\n      loading: false\n    });\n    const is = localStorage.getItem('issueState');\n\n    if (is) {\n      this.setState({\n        issueState: JSON.parse(is)\n      });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const issueState = this.state.issueState;\n\n    if (prevState.issueState !== issueState) {\n      localStorage.setItem('issueState', JSON.stringify(issueState));\n    }\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      issueState: e\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          repository = _this$state2.repository,\n          issues = _this$state2.issues,\n          loading = _this$state2.loading,\n          issueState = _this$state2.issueState;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Carregando\", React.createElement(FaSpinner, {\n        color: \"#FFF\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }));\n    }\n\n    if (!issueState) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Owner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n        src: repository.owner.avatar_url,\n        alt: repository.owner.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, repository.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, repository.description)), React.createElement(IssuesFilter, {\n        onSubmit: this.formSumbit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.handleSubmit('all'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.handleSubmit('open'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Open\"), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.handleSubmit('closed'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Closed\")));\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, repository.description)), React.createElement(IssuesFilter, {\n      onSubmit: this.formSumbit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleSubmit('all'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleSubmit('open'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleSubmit('closed'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Closed\")), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, issue.user.login))))), React.createElement(IssuePagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handlePagination(-1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    })));\n  }\n\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n      state: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Repository;","map":{"version":3,"sources":["/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","FaSpinner","api","Container","Loading","Owner","IssueList","IssuesFilter","IssuePagination","Repository","state","repository","issues","loading","issueState","formSumbit","e","preventDefault","setState","repoName","owner","login","name","get","params","per_page","data","componentDidMount","match","props","decodeURIComponent","is","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","handleSubmit","render","avatar_url","description","map","issue","String","id","user","html_url","title","labels","label","handlePagination","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\n\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\n\nimport {\n  Loading,\n  Owner,\n  IssueList,\n  IssuesFilter,\n  IssuePagination,\n} from './styles';\n\nclass Repository extends Component {\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    issueState: '',\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const repoName = decodeURIComponent(match.params.repository);\n    const repository = await api.get(`/repos/${repoName}`);\n    this.setState({\n      repository: repository.data,\n      loading: false,\n    });\n\n    const is = localStorage.getItem('issueState');\n    if (is) {\n      this.setState({ issueState: JSON.parse(is) });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { issueState } = this.state;\n    if (prevState.issueState !== issueState) {\n      localStorage.setItem('issueState', JSON.stringify(issueState));\n    }\n  }\n\n  formSumbit = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    const { issueState, repository } = this.state;\n    const repoName = `${repository.owner.login}/${repository.name}`;\n    const issues = await api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: issueState,\n        per_page: 5,\n      },\n    });\n\n    this.setState({\n      issues: issues.data,\n      loading: false,\n    });\n  };\n\n  handleSubmit(e) {\n    this.setState({ issueState: e });\n  }\n\n  render() {\n    const { repository, issues, loading, issueState } = this.state;\n\n    if (loading) {\n      return (\n        <Loading>\n          Carregando\n          <FaSpinner color=\"#FFF\" size={30} />\n        </Loading>\n      );\n    }\n\n    if (!issueState) {\n      return (\n        <Container>\n          <Owner>\n            <Link to=\"/\">Voltar aos repositórios</Link>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <h1>{repository.name}</h1>\n            <p>{repository.description}</p>\n          </Owner>\n          <IssuesFilter onSubmit={this.formSumbit}>\n            <button type=\"submit\" onClick={() => this.handleSubmit('all')}>\n              All\n            </button>\n            <button type=\"submit\" onClick={() => this.handleSubmit('open')}>\n              Open\n            </button>\n            <button type=\"submit\" onClick={() => this.handleSubmit('closed')}>\n              Closed\n            </button>\n          </IssuesFilter>\n        </Container>\n      );\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n        <IssuesFilter onSubmit={this.formSumbit}>\n          <button type=\"submit\" onClick={() => this.handleSubmit('all')}>\n            All\n          </button>\n          <button type=\"submit\" onClick={() => this.handleSubmit('open')}>\n            Open\n          </button>\n          <button type=\"submit\" onClick={() => this.handleSubmit('closed')}>\n            Closed\n          </button>\n        </IssuesFilter>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n        <IssuePagination>\n          <button\n            type=\"submit\"\n            onClick={() => this.handlePagination(-1)}\n          ></button>\n        </IssuePagination>\n      </Container>\n    );\n  }\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n      state: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}