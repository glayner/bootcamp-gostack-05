{"ast":null,"code":"var _jsxFileName = \"/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\nimport { Loading, Owner, IssueList, IssuesFilter, IssuePagination } from './styles';\n\nclass Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      issueState: '',\n      issuePage: 1,\n      prevAble: false\n    };\n\n    this.formSumbit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            issueState = _this$state.issueState,\n            repository = _this$state.repository,\n            issuePage = _this$state.issuePage;\n\n      if (issuePage === 1) {\n        this.setState({\n          prevAble: false\n        });\n      } else {\n        this.setState({\n          prevAble: true\n        });\n      }\n\n      const repoName = \"\".concat(repository.owner.login, \"/\").concat(repository.name);\n      const issue = await api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n        params: {\n          state: issueState,\n          per_page: 5,\n          page: 6\n        }\n      });\n      this.setState({\n        issues: issue.data,\n        loading: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const repoName = decodeURIComponent(match.params.repository);\n    const repository = await api.get(\"/repos/\".concat(repoName));\n    this.setState({\n      repository: repository.data,\n      loading: false\n    });\n    const issue = localStorage.getItem('issueState');\n\n    if (issue) {\n      this.setState({\n        issueState: JSON.parse(issue)\n      });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const issueState = this.state.issueState;\n\n    if (prevState.issueState !== issueState) {\n      localStorage.setItem('issueState', JSON.stringify(issueState));\n    }\n  }\n\n  handlePagePrev() {\n    const issuePage = this.state.issuePage;\n\n    if (issuePage > 1) {\n      this.setState({\n        issuePage: Number(issuePage) - 1\n      });\n    }\n  }\n\n  handlePageNext() {\n    const issuePage = this.state.issuePage;\n    this.setState({\n      issuePage: Number(issuePage) + 1\n    });\n  }\n\n  handleSubmit(e) {\n    this.setState({\n      issueState: e\n    });\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          repository = _this$state2.repository,\n          issues = _this$state2.issues,\n          loading = _this$state2.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Carregando\", React.createElement(FaSpinner, {\n        color: \"#FFF\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }));\n    } // if (issues.length === 0) {\n    //   return (\n    //     <Container>\n    //       <Owner>\n    //         <Link to=\"/\">Voltar aos reposit√≥rios</Link>\n    //         <img\n    //           src={repository.owner.avatar_url}\n    //           alt={repository.owner.login}\n    //         />\n    //         <h1>{repository.name}</h1>\n    //         <p>{repository.description}</p>\n    //       </Owner>\n    //       <IssuesFilter onSubmit={this.formSumbit}>\n    //         <button type=\"submit\" onClick={() => this.handleSubmit('all')}>\n    //           All\n    //         </button>\n    //         <button type=\"submit\" onClick={() => this.handleSubmit('open')}>\n    //           Open\n    //         </button>\n    //         <button type=\"submit\" onClick={() => this.handleSubmit('closed')}>\n    //           Closed\n    //         </button>\n    //       </IssuesFilter>\n    //     </Container>\n    //   );\n    // }\n\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, repository.description)), React.createElement(IssuesFilter, {\n      onSubmit: this.formSumbit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleSubmit('all'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleSubmit('open'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleSubmit('closed'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Closed\")), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, issue.user.login))))), React.createElement(IssuePagination, {\n      onSubmit: this.formSumbit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handlePagePrev(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"voltar\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handlePageNext(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, \"avan\\xE7ar\")));\n  }\n\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n      state: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Repository;","map":{"version":3,"sources":["/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","FaSpinner","api","Container","Loading","Owner","IssueList","IssuesFilter","IssuePagination","Repository","state","repository","issues","loading","issueState","issuePage","prevAble","formSumbit","e","preventDefault","setState","repoName","owner","login","name","issue","get","params","per_page","page","data","componentDidMount","match","props","decodeURIComponent","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","handlePagePrev","Number","handlePageNext","handleSubmit","render","avatar_url","description","map","String","id","user","html_url","title","labels","label","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\n\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\n\nimport {\n  Loading,\n  Owner,\n  IssueList,\n  IssuesFilter,\n  IssuePagination,\n} from './styles';\n\nclass Repository extends Component {\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    issueState: '',\n    issuePage: 1,\n    prevAble: false,\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n    const repoName = decodeURIComponent(match.params.repository);\n    const repository = await api.get(`/repos/${repoName}`);\n    this.setState({\n      repository: repository.data,\n      loading: false,\n    });\n\n    const issue = localStorage.getItem('issueState');\n    if (issue) {\n      this.setState({ issueState: JSON.parse(issue) });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { issueState } = this.state;\n\n    if (prevState.issueState !== issueState) {\n      localStorage.setItem('issueState', JSON.stringify(issueState));\n    }\n  }\n\n  formSumbit = async e => {\n    e.preventDefault();\n    this.setState({ loading: true });\n    const { issueState, repository, issuePage } = this.state;\n    if (issuePage === 1) {\n      this.setState({ prevAble: false });\n    } else {\n      this.setState({ prevAble: true });\n    }\n    const repoName = `${repository.owner.login}/${repository.name}`;\n\n    const issue = await api.get(`/repos/${repoName}/issues`, {\n      params: {\n        state: issueState,\n        per_page: 5,\n        page: 6,\n      },\n    });\n    this.setState({\n      issues: issue.data,\n      loading: false,\n    });\n  };\n\n  handlePagePrev() {\n    const { issuePage } = this.state;\n    if (issuePage > 1) {\n      this.setState({\n        issuePage: Number(issuePage) - 1,\n      });\n    }\n  }\n\n  handlePageNext() {\n    const { issuePage } = this.state;\n\n    this.setState({\n      issuePage: Number(issuePage) + 1,\n    });\n  }\n\n  handleSubmit(e) {\n    this.setState({ issueState: e });\n  }\n\n  render() {\n    const { repository, issues, loading } = this.state;\n\n    if (loading) {\n      return (\n        <Loading>\n          Carregando\n          <FaSpinner color=\"#FFF\" size={30} />\n        </Loading>\n      );\n    }\n\n    // if (issues.length === 0) {\n    //   return (\n    //     <Container>\n    //       <Owner>\n    //         <Link to=\"/\">Voltar aos reposit√≥rios</Link>\n    //         <img\n    //           src={repository.owner.avatar_url}\n    //           alt={repository.owner.login}\n    //         />\n    //         <h1>{repository.name}</h1>\n    //         <p>{repository.description}</p>\n    //       </Owner>\n    //       <IssuesFilter onSubmit={this.formSumbit}>\n    //         <button type=\"submit\" onClick={() => this.handleSubmit('all')}>\n    //           All\n    //         </button>\n    //         <button type=\"submit\" onClick={() => this.handleSubmit('open')}>\n    //           Open\n    //         </button>\n    //         <button type=\"submit\" onClick={() => this.handleSubmit('closed')}>\n    //           Closed\n    //         </button>\n    //       </IssuesFilter>\n    //     </Container>\n    //   );\n    // }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos reposit√≥rios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n        <IssuesFilter onSubmit={this.formSumbit}>\n          <button type=\"submit\" onClick={() => this.handleSubmit('all')}>\n            All\n          </button>\n          <button type=\"submit\" onClick={() => this.handleSubmit('open')}>\n            Open\n          </button>\n          <button type=\"submit\" onClick={() => this.handleSubmit('closed')}>\n            Closed\n          </button>\n        </IssuesFilter>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n\n        <IssuePagination onSubmit={this.formSumbit}>\n          <button type=\"submit\" onClick={() => this.handlePagePrev()}>\n            voltar\n          </button>\n          <button type=\"submit\" onClick={() => this.handlePageNext()}>\n            avan√ßar\n          </button>\n        </IssuePagination>\n      </Container>\n    );\n  }\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n      state: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}