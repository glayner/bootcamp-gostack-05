{"ast":null,"code":"var _jsxFileName = \"/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner, FaArrowLeft, FaArrowRight } from 'react-icons/fa';\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\nimport { Loading, Owner, IssueList, IssuesFilter, IssuePagination } from './styles';\n\nclass Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      // state de filtro\n      issueState: '',\n      // states de paginação\n      issuePage: 1,\n      prevDesabled: true,\n      nextDesabled: true,\n      perpage: 30\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const _this$state = this.state,\n            issueState = _this$state.issueState,\n            repository = _this$state.repository,\n            issuePage = _this$state.issuePage,\n            perpage = _this$state.perpage; // condição status estilo de botão voltar desabilitado\n\n      if (issuePage === 1) {\n        this.setState({\n          prevDesabled: true\n        });\n      } else {\n        this.setState({\n          prevDesabled: false\n        });\n      } // api pegar os issueres com parametros\n\n\n      const issue = await api.get(\"/repos/\".concat(repository.full_name, \"/issues\"), {\n        params: {\n          state: issueState,\n          per_page: perpage,\n          page: issuePage\n        }\n      }); // condição status estilo de botão avançar desabilitado\n\n      if (issue.data.length < perpage) {\n        this.setState({\n          nextDesabled: true\n        });\n      } else {\n        this.setState({\n          nextDesabled: false\n        });\n      }\n\n      this.setState({\n        issues: issue.data,\n        loading: false\n      });\n    };\n  }\n\n  async componentDidMount() {\n    // monta repositorio pegando o nome dele pelos parametros passados pelo Main\n    const match = this.props.match;\n    const repoName = decodeURIComponent(match.params.repository);\n    const repository = await api.get(\"/repos/\".concat(repoName));\n    this.setState({\n      repository: repository.data,\n      loading: false\n    }); // pegar filtro do local storage e passar para state quando pagina carrega ou da submit\n\n    const issue = localStorage.getItem('issueState');\n\n    if (issue) {\n      this.setState({\n        issueState: JSON.parse(issue)\n      });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const issueState = this.state.issueState; // grava filtro no local storage sempre que ele altera\n\n    if (prevState.issueState !== issueState) {\n      localStorage.setItem('issueState', JSON.stringify(issueState));\n    }\n  } // carrega ao dar submit dentro do formulario que tem essa função em onSubmit\n\n\n  // função de decremento de pagina\n  handlePagePrev() {\n    const issuePage = this.state.issuePage; // condição para decrementar pagina\n\n    if (issuePage !== 1) {\n      this.setState({\n        issuePage: Number(issuePage) - 1\n      });\n    }\n  } // função de incremento de pagina\n\n\n  handlePageNext() {\n    const _this$state2 = this.state,\n          issuePage = _this$state2.issuePage,\n          issues = _this$state2.issues,\n          perpage = _this$state2.perpage; // condição para incrementar pagina\n\n    if (issues.length === perpage) {\n      this.setState({\n        issuePage: Number(issuePage) + 1\n      });\n    }\n  } // função de filtro do state\n\n\n  handleFilter(e) {\n    this.setState({\n      issueState: e,\n      issuePage: 1\n    });\n  }\n\n  render() {\n    const _this$state3 = this.state,\n          repository = _this$state3.repository,\n          issues = _this$state3.issues,\n          loading = _this$state3.loading,\n          issuePage = _this$state3.issuePage,\n          prevDesabled = _this$state3.prevDesabled,\n          nextDesabled = _this$state3.nextDesabled; // se status de loadin estiver true só aparece o carregamento\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"Carregando\", React.createElement(FaSpinner, {\n        color: \"#FFF\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }));\n    } // se array de issues estiver vazio e for a primeira pagina só carrega o Owner e IssuesFilter\n\n\n    if (issues.length === 0 && issuePage <= 1) {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Owner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n        src: repository.owner.avatar_url,\n        alt: repository.owner.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, repository.name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, repository.description)), React.createElement(IssuesFilter, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.handleFilter('all'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, \"All\"), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.handleFilter('open'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Open\"), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: () => this.handleFilter('closed'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Closed\")));\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, repository.description)), React.createElement(IssuesFilter, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleFilter('all'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleFilter('open'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handleFilter('closed'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, \"Closed\")), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, issue.user.login))))), React.createElement(IssuePagination, {\n      onSubmit: this.handleSubmit,\n      prevDesabled: prevDesabled ? 1 : 0,\n      nextDesabled: nextDesabled ? 1 : 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handlePagePrev(),\n      className: \"prev\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(FaArrowLeft, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, issuePage), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: () => this.handlePageNext(),\n      className: \"next\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(FaArrowRight, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }))));\n  }\n\n} // para pegar o paremetro passado pelo Main usando o match tem que declara-lo pelo prop-types\n\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Repository;","map":{"version":3,"sources":["/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","FaSpinner","FaArrowLeft","FaArrowRight","api","Container","Loading","Owner","IssueList","IssuesFilter","IssuePagination","Repository","state","repository","issues","loading","issueState","issuePage","prevDesabled","nextDesabled","perpage","handleSubmit","e","preventDefault","setState","issue","get","full_name","params","per_page","page","data","length","componentDidMount","match","props","repoName","decodeURIComponent","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","handlePagePrev","Number","handlePageNext","handleFilter","render","owner","avatar_url","login","name","description","map","String","id","user","html_url","title","labels","label","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner, FaArrowLeft, FaArrowRight } from 'react-icons/fa';\n\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\n\nimport {\n  Loading,\n  Owner,\n  IssueList,\n  IssuesFilter,\n  IssuePagination,\n} from './styles';\n\nclass Repository extends Component {\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    // state de filtro\n    issueState: '',\n    // states de paginação\n    issuePage: 1,\n    prevDesabled: true,\n    nextDesabled: true,\n    perpage: 30,\n  };\n\n  async componentDidMount() {\n    // monta repositorio pegando o nome dele pelos parametros passados pelo Main\n    const { match } = this.props;\n    const repoName = decodeURIComponent(match.params.repository);\n    const repository = await api.get(`/repos/${repoName}`);\n\n    this.setState({\n      repository: repository.data,\n      loading: false,\n    });\n    // pegar filtro do local storage e passar para state quando pagina carrega ou da submit\n    const issue = localStorage.getItem('issueState');\n    if (issue) {\n      this.setState({ issueState: JSON.parse(issue) });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { issueState } = this.state;\n    // grava filtro no local storage sempre que ele altera\n    if (prevState.issueState !== issueState) {\n      localStorage.setItem('issueState', JSON.stringify(issueState));\n    }\n  }\n\n  // carrega ao dar submit dentro do formulario que tem essa função em onSubmit\n  handleSubmit = async e => {\n    e.preventDefault();\n\n    this.setState({ loading: true });\n\n    const { issueState, repository, issuePage, perpage } = this.state;\n    // condição status estilo de botão voltar desabilitado\n    if (issuePage === 1) {\n      this.setState({ prevDesabled: true });\n    } else {\n      this.setState({ prevDesabled: false });\n    }\n    // api pegar os issueres com parametros\n    const issue = await api.get(`/repos/${repository.full_name}/issues`, {\n      params: {\n        state: issueState,\n        per_page: perpage,\n        page: issuePage,\n      },\n    });\n    // condição status estilo de botão avançar desabilitado\n    if (issue.data.length < perpage) {\n      this.setState({ nextDesabled: true });\n    } else {\n      this.setState({ nextDesabled: false });\n    }\n\n    this.setState({\n      issues: issue.data,\n      loading: false,\n    });\n  };\n\n  // função de decremento de pagina\n  handlePagePrev() {\n    const { issuePage } = this.state;\n    // condição para decrementar pagina\n    if (issuePage !== 1) {\n      this.setState({\n        issuePage: Number(issuePage) - 1,\n      });\n    }\n  }\n\n  // função de incremento de pagina\n  handlePageNext() {\n    const { issuePage, issues, perpage } = this.state;\n    // condição para incrementar pagina\n    if (issues.length === perpage) {\n      this.setState({\n        issuePage: Number(issuePage) + 1,\n      });\n    }\n  }\n\n  // função de filtro do state\n  handleFilter(e) {\n    this.setState({ issueState: e, issuePage: 1 });\n  }\n\n  render() {\n    const {\n      repository,\n      issues,\n      loading,\n      issuePage,\n      prevDesabled,\n      nextDesabled,\n    } = this.state;\n\n    // se status de loadin estiver true só aparece o carregamento\n    if (loading) {\n      return (\n        <Loading>\n          Carregando\n          <FaSpinner color=\"#FFF\" size={30} />\n        </Loading>\n      );\n    }\n\n    // se array de issues estiver vazio e for a primeira pagina só carrega o Owner e IssuesFilter\n    if (issues.length === 0 && issuePage <= 1) {\n      return (\n        <Container>\n          <Owner>\n            <Link to=\"/\">Voltar aos repositórios</Link>\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <h1>{repository.name}</h1>\n            <p>{repository.description}</p>\n          </Owner>\n          {/* ao dar clicar em qualquer botão chama primeiro a função do botão e o formSubmit que recarrega a pagina e preenche o issues */}\n          <IssuesFilter onSubmit={this.handleSubmit}>\n            <button type=\"submit\" onClick={() => this.handleFilter('all')}>\n              All\n            </button>\n            <button type=\"submit\" onClick={() => this.handleFilter('open')}>\n              Open\n            </button>\n            <button type=\"submit\" onClick={() => this.handleFilter('closed')}>\n              Closed\n            </button>\n          </IssuesFilter>\n        </Container>\n      );\n    }\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n\n        {/* ao dar clicar em qualquer botão chama primeiro a função do botão e o formSubmit que recarrega a pagina e altera o issues com outro filtro */}\n        <IssuesFilter onSubmit={this.handleSubmit}>\n          <button type=\"submit\" onClick={() => this.handleFilter('all')}>\n            All\n          </button>\n          <button type=\"submit\" onClick={() => this.handleFilter('open')}>\n            Open\n          </button>\n          <button type=\"submit\" onClick={() => this.handleFilter('closed')}>\n            Closed\n          </button>\n        </IssuesFilter>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n\n        {/* ao dar clicar em qualquer botão chama primeiro a função do botão e o formSubmit que recarrega a pagina e altera o issues com outra pagina */}\n        <IssuePagination\n          onSubmit={this.handleSubmit}\n          prevDesabled={prevDesabled ? 1 : 0}\n          nextDesabled={nextDesabled ? 1 : 0}\n        >\n          <button\n            type=\"submit\"\n            onClick={() => this.handlePagePrev()}\n            className=\"prev\"\n          >\n            <FaArrowLeft />\n          </button>\n          <span>{issuePage}</span>\n          <button\n            type=\"submit\"\n            onClick={() => this.handlePageNext()}\n            className=\"next\"\n          >\n            <FaArrowRight />\n          </button>\n        </IssuePagination>\n      </Container>\n    );\n  }\n}\n// para pegar o paremetro passado pelo Main usando o match tem que declara-lo pelo prop-types\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}