{"ast":null,"code":"import _slicedToArray from \"/home/thiago/worckspace/GoStack/modulo05/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\nimport { Loading, Owner, IssueList, IssuesFilter } from './styles';\n\nclass Repository extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      repository: {},\n      issues: [],\n      loading: true,\n      issueState: 'open'\n    };\n\n    this.handleAll = e => {\n      e.preventDefault();\n      this.setState({\n        issueState: 'all'\n      });\n    };\n\n    this.handleOpen = e => {\n      e.preventDefault();\n      this.setState({\n        issueState: 'open'\n      });\n    };\n\n    this.handleClosed = e => {\n      e.preventDefault();\n      this.setState({\n        issueState: 'closed'\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const match = this.props.match;\n    const issueState = this.state.issueState;\n    const repoName = decodeURIComponent(match.params.repository);\n\n    const _ref = await Promise.all([api.get(\"/repos/\".concat(repoName)), api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n      params: {\n        state: issueState,\n        per_page: 1\n      }\n    })]),\n          _ref2 = _slicedToArray(_ref, 2),\n          repository = _ref2[0],\n          issues = _ref2[1];\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false\n    });\n    const issue = localStorage.getItem('issues');\n\n    if (issue) {\n      this.setState({\n        issues: JSON.parse(issue)\n      });\n    }\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const _this$state = this.state,\n          issueState = _this$state.issueState,\n          repository = _this$state.repository;\n    const repoName = \"\".concat(repository.owner.login, \"/\").concat(repository.name);\n\n    if (prevState.issueState !== issueState) {\n      const issue = await api.get(\"/repos/\".concat(repoName, \"/issues\"), {\n        params: {\n          state: issueState,\n          per_page: 1\n        }\n      });\n      localStorage.setItem('issue', JSON.stringify(issue.data));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          repository = _this$state2.repository,\n          issues = _this$state2.issues,\n          loading = _this$state2.loading;\n\n    if (loading) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Carregando\", React.createElement(FaSpinner, {\n        color: \"#FFF\",\n        size: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Owner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Voltar aos reposit\\xF3rios\"), React.createElement(\"img\", {\n      src: repository.owner.avatar_url,\n      alt: repository.owner.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, repository.name), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, repository.description)), React.createElement(IssuesFilter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleAll,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"All\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleOpen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Open\"), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.handleClosed,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Closed\")), React.createElement(IssueList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, issues.map(issue => React.createElement(\"li\", {\n      key: String(issue.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: issue.user.avatar_url,\n      alt: issue.user.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: issue.html_url,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, issue.title), issue.labels.map(label => React.createElement(\"span\", {\n      key: String(label.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, label.name))), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, issue.user.login))))));\n  }\n\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n      state: PropTypes.string\n    })\n  }).isRequired\n};\nexport default Repository;","map":{"version":3,"sources":["/home/thiago/worckspace/GoStack/modulo05/src/pages/Repository/index.js"],"names":["React","Component","Link","PropTypes","FaSpinner","api","Container","Loading","Owner","IssueList","IssuesFilter","Repository","state","repository","issues","loading","issueState","handleAll","e","preventDefault","setState","handleOpen","handleClosed","componentDidMount","match","props","repoName","decodeURIComponent","params","Promise","all","get","per_page","data","issue","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","owner","login","name","setItem","stringify","render","avatar_url","description","map","String","id","user","html_url","title","labels","label","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { FaSpinner } from 'react-icons/fa';\n\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\n\nimport { Loading, Owner, IssueList, IssuesFilter } from './styles';\n\nclass Repository extends Component {\n  state = {\n    repository: {},\n    issues: [],\n    loading: true,\n    issueState: 'open',\n  };\n\n  async componentDidMount() {\n    const { match } = this.props;\n\n    const { issueState } = this.state;\n\n    const repoName = decodeURIComponent(match.params.repository);\n    const [repository, issues] = await Promise.all([\n      api.get(`/repos/${repoName}`),\n      api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: issueState,\n          per_page: 1,\n        },\n      }),\n    ]);\n\n    this.setState({\n      repository: repository.data,\n      issues: issues.data,\n      loading: false,\n    });\n\n    const issue = localStorage.getItem('issues');\n\n    if (issue) {\n      this.setState({\n        issues: JSON.parse(issue),\n      });\n    }\n  }\n\n  async componentDidUpdate(_, prevState) {\n    const { issueState, repository } = this.state;\n    const repoName = `${repository.owner.login}/${repository.name}`;\n    if (prevState.issueState !== issueState) {\n      const issue = await api.get(`/repos/${repoName}/issues`, {\n        params: {\n          state: issueState,\n          per_page: 1,\n        },\n      });\n      localStorage.setItem('issue', JSON.stringify(issue.data));\n    }\n  }\n\n  handleAll = e => {\n    e.preventDefault();\n    this.setState({ issueState: 'all' });\n  };\n\n  handleOpen = e => {\n    e.preventDefault();\n    this.setState({ issueState: 'open' });\n  };\n\n  handleClosed = e => {\n    e.preventDefault();\n    this.setState({ issueState: 'closed' });\n  };\n\n  render() {\n    const { repository, issues, loading } = this.state;\n\n    if (loading) {\n      return (\n        <Loading>\n          Carregando\n          <FaSpinner color=\"#FFF\" size={30} />\n        </Loading>\n      );\n    }\n\n    return (\n      <Container>\n        <Owner>\n          <Link to=\"/\">Voltar aos repositórios</Link>\n          <img src={repository.owner.avatar_url} alt={repository.owner.login} />\n          <h1>{repository.name}</h1>\n          <p>{repository.description}</p>\n        </Owner>\n        <IssuesFilter>\n          <button type=\"submit\" onClick={this.handleAll}>\n            All\n          </button>\n          <button type=\"submit\" onClick={this.handleOpen}>\n            Open\n          </button>\n          <button type=\"submit\" onClick={this.handleClosed}>\n            Closed\n          </button>\n        </IssuesFilter>\n\n        <IssueList>\n          {issues.map(issue => (\n            <li key={String(issue.id)}>\n              <img src={issue.user.avatar_url} alt={issue.user.login} />\n              <div>\n                <strong>\n                  <a href={issue.html_url}>{issue.title}</a>\n                  {issue.labels.map(label => (\n                    <span key={String(label.id)}>{label.name}</span>\n                  ))}\n                </strong>\n                <p>{issue.user.login}</p>\n              </div>\n            </li>\n          ))}\n        </IssueList>\n      </Container>\n    );\n  }\n}\n\nRepository.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      repository: PropTypes.string,\n      state: PropTypes.string,\n    }),\n  }).isRequired,\n};\n\nexport default Repository;\n"]},"metadata":{},"sourceType":"module"}