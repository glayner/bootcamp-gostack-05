{"ast":null,"code":"var _jsxFileName = \"/home/thiago/worckspace/GoStack/modulo05/src/pages/Main/index.js\";\nimport React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\nimport { Form, SubmitButton, List } from './styles';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      newRepo: '',\n      repositories: [],\n      loading: false,\n      found: Boolean\n    };\n\n    this.handleInputChange = e => {\n      this.setState({\n        newRepo: e.target.value\n      });\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n\n      try {\n        this.setState({\n          loading: true,\n          found: true\n        });\n        const _this$state = this.state,\n              newRepo = _this$state.newRepo,\n              repositories = _this$state.repositories;\n        const response = await api.get(\"/repos/\".concat(newRepo));\n        const data = {\n          name: response.data.full_name\n        };\n        this.setState({\n          repositories: [...repositories, data],\n          newRepo: '',\n          loading: false\n        });\n      } catch (error) {}\n    };\n  }\n\n  // Carregar os dados no localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories)\n      });\n    }\n  } // Salvar os dados no localStorage\n\n\n  componentDidUpdate(_, prevState) {\n    const repositories = this.state.repositories;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          newRepo = _this$state2.newRepo,\n          loading = _this$state2.loading,\n          repositories = _this$state2.repositories;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(FaGithubAlt, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), \"Reposit\\xF3rio\"), React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Adicionar reposit\\xF3rio\",\n      value: newRepo,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(SubmitButton, {\n      loading: loading ? 1 : 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, loading ? React.createElement(FaSpinner, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }) : React.createElement(FaPlus, {\n      color: \"#FFF\",\n      size: 14,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }))), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, repositories.map(repository => React.createElement(\"li\", {\n      key: repository.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, repository.name), React.createElement(Link, {\n      to: \"/repository/\".concat(encodeURIComponent(repository.name)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Detalhes\")))));\n  }\n\n}","map":{"version":3,"sources":["/home/thiago/worckspace/GoStack/modulo05/src/pages/Main/index.js"],"names":["React","Component","FaGithubAlt","FaPlus","FaSpinner","Link","api","Container","Form","SubmitButton","List","Main","state","newRepo","repositories","loading","found","Boolean","handleInputChange","e","setState","target","value","handleSubmit","preventDefault","response","get","data","name","full_name","error","componentDidMount","localStorage","getItem","JSON","parse","componentDidUpdate","_","prevState","setItem","stringify","render","map","repository","encodeURIComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FaGithubAlt, FaPlus, FaSpinner } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nimport api from '../../services/api';\nimport Container from '../../components/Container/index';\n\nimport { Form, SubmitButton, List } from './styles';\n\nexport default class Main extends Component {\n  state = {\n    newRepo: '',\n    repositories: [],\n    loading: false,\n    found: Boolean,\n  };\n\n  // Carregar os dados no localStorage\n  componentDidMount() {\n    const repositories = localStorage.getItem('repositories');\n\n    if (repositories) {\n      this.setState({\n        repositories: JSON.parse(repositories),\n      });\n    }\n  }\n\n  // Salvar os dados no localStorage\n  componentDidUpdate(_, prevState) {\n    const { repositories } = this.state;\n\n    if (prevState.repositories !== repositories) {\n      localStorage.setItem('repositories', JSON.stringify(repositories));\n    }\n  }\n\n  handleInputChange = e => {\n    this.setState({\n      newRepo: e.target.value,\n    });\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      this.setState({ loading: true, found: true });\n\n      const { newRepo, repositories } = this.state;\n\n      const response = await api.get(`/repos/${newRepo}`);\n\n      const data = {\n        name: response.data.full_name,\n      };\n\n      this.setState({\n        repositories: [...repositories, data],\n        newRepo: '',\n        loading: false,\n      });\n    } catch (error) {}\n  };\n\n  render() {\n    const { newRepo, loading, repositories } = this.state;\n    return (\n      <Container>\n        <h1>\n          <FaGithubAlt />\n          Repositório\n        </h1>\n\n        <Form onSubmit={this.handleSubmit}>\n          <input\n            type=\"text\"\n            placeholder=\"Adicionar repositório\"\n            value={newRepo}\n            onChange={this.handleInputChange}\n          />\n\n          <SubmitButton loading={loading ? 1 : 0}>\n            {loading ? (\n              <FaSpinner color=\"#FFF\" size={14} />\n            ) : (\n              <FaPlus color=\"#FFF\" size={14} />\n            )}\n          </SubmitButton>\n        </Form>\n        <List>\n          {repositories.map(repository => (\n            <li key={repository.name}>\n              <span>{repository.name}</span>\n              <Link to={`/repository/${encodeURIComponent(repository.name)}`}>\n                Detalhes\n              </Link>\n            </li>\n          ))}\n        </List>\n      </Container>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}